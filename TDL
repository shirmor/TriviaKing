- Statistics -think of criteria: best team ever to play on this server, most commonly typed character, anything else you can think of…)

- Edge case 1: assure that if the server disconnects in the middle of the game\ if the wifi disconnects - there is a clean exit
- Edge case 2: check invalid input

- Try running through cmd
- Try running through different computers
- Running 2 servers - check what needs to happen when clients are connected to a server and then another server runs, do they need to connect to it?
- extract the name from the UDP message(?) what's the use?
-  Both server and client applications are supposed to run forever, until you quit them
manually. You will not get full points if your program quits or crashes, even if it’s because
of some network-related problems.
- Do not use busy-waiting (e.g. while-continue loops). As a general guideline, if your
program consumes more than 1% CPU, you’re probably doing something wrong.
- Think about what you should do if things fail - messages are corrupted, the server does
not respond, the clients hang up, etc. Your error handling code will be tested.
- packet loss
- documentation
- Return values of functions are checked
- make sure the exception messages are proper

- a game with 2 clients and both of them quit in the middle - see what to do
- one computer opens the server and the other computer opens two clients
- disconnect a client in the middle and don't let him in afterwards
- disconnect a server and notify everyone ("try again")
- if the game started, don't let new players join
- if a player leaves, delete its socket and its name from the dictionary